<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Motors.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Motors.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Wed Sep 11 15:58:50 2013
<BR><P>
<H3>Maximum Stack Usage =        224 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; __hardfp_acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[39]">ADC3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[44]">ADC4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f30x_it.o(i.BusFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[45]">COMP1_2_3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[46]">COMP4_5_6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[47]">COMP7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[40]">DMA2_Channel2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[41]">DMA2_Channel3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[42]">DMA2_Channel4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[43]">DMA2_Channel5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f30x_it.o(i.DebugMon_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[12]">EXTI2_TS_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4b]">FPU_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f30x_it.o(i.HardFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f30x_it.o(i.MemManage_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f30x_it.o(i.NMI_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f30x_it.o(i.PendSV_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4f]">Reset_Handler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3a]">SPI3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f30x_it.o(i.SVC_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f30x_it.o(i.SysTick_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4d]">SystemInit</a> from system_stm32f30x.o(i.SystemInit) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[c]">TAMPER_STAMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_TIM15_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_TIM17_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[23]">TIM1_UP_TIM16_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3d]">TIM6_DAC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3e]">TIM7_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[35]">TIM8_BRK_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[38]">TIM8_CC_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[37]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[36]">TIM8_UP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3b]">UART4_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[3c]">UART5_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from stm32f30x_it.o(i.USART2_IRQHandler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[34]">USBWakeUp_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4a]">USBWakeUp_RMP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1d]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[48]">USB_HP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[1e]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[49]">USB_LP_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f30x_it.o(i.UsageFault_Handler) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f30x.o(.text) referenced from startup_stm32f30x.o(RESET)
 <LI><a href="#[4e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f30x.o(.text)
 <LI><a href="#[4c]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(.text)
</UL>
<P><STRONG><a name="[b3]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[50]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[60]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b4]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b5]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b6]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b7]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b8]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[4f]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))

<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>ADC4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>COMP1_2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>COMP4_5_6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>COMP7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_TS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USBWakeUp_RMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>USB_HP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USB_LP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f30x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[59]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[5b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b1]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b9]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[ba]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[bc]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[55]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[5f]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[51]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5e]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>

<P><STRONG><a name="[be]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>Acc_ReadAcc</STRONG> (Thumb, 244 bytes, Stack size 48 bytes, system_control.o(i.Acc_ReadAcc))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Acc_ReadAcc &rArr; LSM303DLHC_Read &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[a4]"></a>ESC_SetPower</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, system_control.o(i.ESC_SetPower))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC
</UL>

<P><STRONG><a name="[7f]"></a>EXTI_Init</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, stm32f30x_exti.o(i.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[6d]"></a>GPIO_Init</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, stm32f30x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_GPIO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[6c]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f30x_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_GPIO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[73]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
</UL>

<P><STRONG><a name="[72]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[63]"></a>Gyro_ReadAngRate</STRONG> (Thumb, 186 bytes, Stack size 48 bytes, system_control.o(i.Gyro_ReadAngRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Gyro_ReadAngRate &rArr; L3GD20_Read &rArr; L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_i2c.o(i.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>

<P><STRONG><a name="[81]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_i2c.o(i.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[83]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_i2c.o(i.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>

<P><STRONG><a name="[80]"></a>I2C_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f30x_i2c.o(i.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[86]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f30x_i2c.o(i.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
</UL>

<P><STRONG><a name="[85]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_i2c.o(i.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>

<P><STRONG><a name="[84]"></a>I2C_TransferHandling</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32f30x_i2c.o(i.I2C_TransferHandling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_TransferHandling
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>

<P><STRONG><a name="[65]"></a>L3GD20_FilterCmd</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_FilterCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = L3GD20_FilterCmd &rArr; L3GD20_Read &rArr; L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gyro
</UL>

<P><STRONG><a name="[67]"></a>L3GD20_FilterConfig</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_FilterConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = L3GD20_FilterConfig &rArr; L3GD20_Read &rArr; L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gyro
</UL>

<P><STRONG><a name="[68]"></a>L3GD20_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = L3GD20_Init &rArr; L3GD20_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gyro
</UL>

<P><STRONG><a name="[64]"></a>L3GD20_Read</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = L3GD20_Read &rArr; L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterCmd
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gyro_ReadAngRate
</UL>

<P><STRONG><a name="[78]"></a>L3GD20_TIMEOUT_UserCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_control.o(i.L3GD20_TIMEOUT_UserCallback))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>

<P><STRONG><a name="[66]"></a>L3GD20_Write</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = L3GD20_Write &rArr; L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterCmd
</UL>

<P><STRONG><a name="[79]"></a>LSM303DLHC_AccFilterConfig</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_AccFilterConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LSM303DLHC_AccFilterConfig &rArr; LSM303DLHC_Read &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_acc
</UL>

<P><STRONG><a name="[7b]"></a>LSM303DLHC_AccInit</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_AccInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = LSM303DLHC_AccInit &rArr; LSM303DLHC_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_acc
</UL>

<P><STRONG><a name="[82]"></a>LSM303DLHC_MagInit</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_MagInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = LSM303DLHC_MagInit &rArr; LSM303DLHC_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_acc
</UL>

<P><STRONG><a name="[62]"></a>LSM303DLHC_Read</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303DLHC_Read &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_TIMEOUT_UserCallback
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acc_ReadAcc
</UL>

<P><STRONG><a name="[87]"></a>LSM303DLHC_TIMEOUT_UserCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_control.o(i.LSM303DLHC_TIMEOUT_UserCallback))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Read
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_Write
</UL>

<P><STRONG><a name="[7a]"></a>LSM303DLHC_Write</STRONG> (Thumb, 220 bytes, Stack size 40 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LSM303DLHC_Write &rArr; I2C_TransferHandling
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_TIMEOUT_UserCallback
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferHandling
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_MagInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterConfig
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[8d]"></a>NVIC_Init</STRONG> (Thumb, 90 bytes, Stack size 20 bytes, stm32f30x_misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
</UL>

<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_AHBPeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_GPIO
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[7d]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_GPIO
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[8a]"></a>RCC_APB1PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB1PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[6a]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[89]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f30x_rcc.o(i.RCC_APB2PeriphResetCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
</UL>

<P><STRONG><a name="[94]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 576 bytes, Stack size 36 bytes, stm32f30x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[71]"></a>SPI_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[6e]"></a>SPI_I2S_DeInit</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, stm32f30x_spi.o(i.SPI_I2S_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_I2S_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[75]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>

<P><STRONG><a name="[6f]"></a>SPI_Init</STRONG> (Thumb, 122 bytes, Stack size 12 bytes, stm32f30x_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[77]"></a>SPI_ReceiveData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_spi.o(i.SPI_ReceiveData8))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>

<P><STRONG><a name="[70]"></a>SPI_RxFIFOThresholdConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f30x_spi.o(i.SPI_RxFIFOThresholdConfig))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_LowLevel_Init
</UL>

<P><STRONG><a name="[76]"></a>SPI_SendData8</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_spi.o(i.SPI_SendData8))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_SendByte
</UL>

<P><STRONG><a name="[8b]"></a>STM_EVAL_LEDInit</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f3_discovery.o(i.STM_EVAL_LEDInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = STM_EVAL_LEDInit &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_discovery_board
</UL>

<P><STRONG><a name="[92]"></a>STM_EVAL_LEDOn</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f3_discovery.o(i.STM_EVAL_LEDOn))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[8c]"></a>STM_EVAL_PBInit</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, stm32f3_discovery.o(i.STM_EVAL_PBInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = STM_EVAL_PBInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_discovery_board
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f30x_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_LowLevel_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f30x_it.o(i.SysTick_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimingDelay_Decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>SystemInit</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, system_stm32f30x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(.text)
</UL>
<P><STRONG><a name="[ac]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[ae]"></a>TIM_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[ad]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[a6]"></a>TIM_OC1Init</STRONG> (Thumb, 110 bytes, Stack size 12 bytes, stm32f30x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[a7]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[a8]"></a>TIM_OC2Init</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, stm32f30x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[a9]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[aa]"></a>TIM_OC3Init</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, stm32f30x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[ab]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f30x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[a5]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 108 bytes, Stack size 12 bytes, stm32f30x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
</UL>

<P><STRONG><a name="[8e]"></a>TimingDelay_Decrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_control.o(i.TimingDelay_Decrement))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, stm32f30x_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDOn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[b0]"></a>USART_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
</UL>

<P><STRONG><a name="[90]"></a>USART_GetITStatus</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, stm32f30x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[af]"></a>USART_ITConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f30x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
</UL>

<P><STRONG><a name="[93]"></a>USART_Init</STRONG> (Thumb, 176 bytes, Stack size 72 bytes, stm32f30x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
</UL>

<P><STRONG><a name="[91]"></a>USART_ReceiveData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f30x_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f30x_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f30x.o(RESET)
</UL>
<P><STRONG><a name="[95]"></a>__hardfp_acos</STRONG> (Thumb, 738 bytes, Stack size 72 bytes, acos.o(i.__hardfp_acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[99]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[97]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[bf]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c0]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[96]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[9a]"></a>init_ALL</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, init.o(i.init_ALL))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = init_ALL &rArr; init_acc &rArr; LSM303DLHC_MagInit &rArr; LSM303DLHC_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_gyro
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_discovery_board
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_acc
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_USART2
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_SysTick
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>init_ESC</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, init.o(i.init_ESC))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = init_ESC &rArr; init_ESC_Timer &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ESC_SetPower
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_Timer
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC_GPIO
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[a2]"></a>init_ESC_GPIO</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, init.o(i.init_ESC_GPIO))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = init_ESC_GPIO &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC
</UL>

<P><STRONG><a name="[a3]"></a>init_ESC_Timer</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, init.o(i.init_ESC_Timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = init_ESC_Timer &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ESC
</UL>

<P><STRONG><a name="[9c]"></a>init_SysTick</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, init.o(i.init_SysTick))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[a1]"></a>init_USART2</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, init.o(i.init_USART2))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = init_USART2 &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[9f]"></a>init_acc</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, init.o(i.init_acc))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = init_acc &rArr; LSM303DLHC_MagInit &rArr; LSM303DLHC_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_MagInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccFilterConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[9b]"></a>init_discovery_board</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, init.o(i.init_discovery_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = init_discovery_board &rArr; STM_EVAL_PBInit &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_PBInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM_EVAL_LEDInit
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[9e]"></a>init_gyro</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, init.o(i.init_gyro))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = init_gyro &rArr; L3GD20_Init &rArr; L3GD20_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterConfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_FilterCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[a0]"></a>init_timer</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, init.o(i.init_timer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = init_timer &rArr; TIM_TimeBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
</UL>

<P><STRONG><a name="[b2]"></a>kalmanCalculate</STRONG> (Thumb, 178 bytes, Stack size 0 bytes, system_control.o(i.kalmanCalculate))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>main</STRONG> (Thumb, 526 bytes, Stack size 40 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = main &rArr; __hardfp_acos &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;kalmanCalculate
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ALL
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gyro_ReadAngRate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Acc_ReadAcc
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[98]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[8f]"></a>SetSysClock</STRONG> (Thumb, 140 bytes, Stack size 12 bytes, system_stm32f30x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[7c]"></a>LSM303DLHC_LowLevel_Init</STRONG> (Thumb, 254 bytes, Stack size 64 bytes, stm32f3_discovery_lsm303dlhc.o(i.LSM303DLHC_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LSM303DLHC_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_MagInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LSM303DLHC_AccInit
</UL>

<P><STRONG><a name="[69]"></a>L3GD20_LowLevel_Init</STRONG> (Thumb, 306 bytes, Stack size 56 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_LowLevel_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = L3GD20_LowLevel_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxFIFOThresholdConfig
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_DeInit
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Init
</UL>

<P><STRONG><a name="[74]"></a>L3GD20_SendByte</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, stm32f3_discovery_l3gd20.o(i.L3GD20_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = L3GD20_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_TIMEOUT_UserCallback
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_SendData8
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_ReceiveData8
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Read
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;L3GD20_Write
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
